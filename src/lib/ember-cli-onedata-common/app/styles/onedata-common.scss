@import 'colors-common';
@import 'oneicons';

/// Import OpenSans Regular
@font-face {
    font-family: 'Open Sans';
    src: url('OpenSans-Regular-webfont.eot');
    src: local('Open Sans'), local('OpenSans'),
         url('fonts/opensans/OpenSans-Regular-webfont.eot?#iefix') format('embedded-opentype'),
         url('fonts/opensans/OpenSans-Regular-webfont.woff') format('woff'),
         url('fonts/opensans/OpenSans-Regular-webfont.ttf') format('truetype'),
         url('fonts/opensans/OpenSans-Regular-webfont.svg#open_sansregular') format('svg');
    font-weight: normal;
    font-style: normal;
}

/// Import OpenSans Bold
@font-face {
    font-family: 'Open Sans';
    src: url('OpenSans-Bold-webfont.eot');
    src: local('Open Sans'), local('OpenSans'),
         url('fonts/opensans/OpenSans-Bold-webfont.eot?#iefix') format('embedded-opentype'),
         url('fonts/opensans/OpenSans-Bold-webfont.woff') format('woff'),
         url('fonts/opensans/OpenSans-Bold-webfont.ttf') format('truetype'),
         url('fonts/opensans/OpenSans-Bold-webfont.svg#open_sansbold') format('svg');
    font-weight: bold;
    font-style: normal;
}


.one-row {
  display: table;
  > * {
    display: table-cell;
    vertical-align: middle;
  }
}

// base class for string truncation - please use additional context truncation classes
.truncate {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.nowrap {
  white-space: nowrap;
  overflow: hidden;
}

.route-loading {
  // on top of common loader
  z-index: 10001;
  position: absolute;
  // cover everything below
  background-color: white;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
}

.hover-parent {
  &:not(:hover) {
    .visible-on-parent-hover, .transparent-not-hovered {
      color: transparent !important;
    }
    .visible-on-parent-hover-25p {
      opacity: 0.25;
    }
  }

  // legacy version for OZ - probably to remove in future
  .white-on-parent-hover {
    color: transparent !important;
  }
  &:hover {
    .white-on-parent-hover {
      color: white !important;
    }
  }
}

.floater {
  position: fixed !important;
  top: auto;
  right: auto;
  bottom: auto;
  left: auto;
}


// to use with spinner-contaier
.spinner-label {
  padding-left: 8px;

  &.spinner-label-32 {
    line-height: 32px;
  }

  &.spinner-label-64 {
    line-height: 64px;
  }

  &.spinner-label-128 {
    line-height: 128px;
  }
}

.spinner-container {
  position: relative;

  &.spinner-32 {
    width: 32px;
    height: 32px;
  }

  &.spinner-64 {
    width: 64px;
    height: 64px;
  }

  &.spinner-128 {
    width: 128px;
    height: 128px;
  }

  &.spinner-centered {
    width: 100% !important;
  }
  
  &.spinner-middle {
    height: 100% !important;
  }
}

.tooltip .tooltip-inner {
  word-wrap: break-word;
}

.fixed-center {
  position: fixed !important;
  top: 50%;
  left: 50%;
  transform: translateX(-50%) translateY(-50%);
}

.v-center-parent {
  position: relative;
}

.v-center-child {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translateX(-50%) translateY(-50%);
}

.danger-message {
  font-weight: bold;
  color: $color-danger;
}

/// name-conflict component

.conflict-label {
  opacity: 0.75;
}
.conflict-at {
  opacity: 0.5;
}

// Bootstrap extensions

.table-no-border>thead>tr>th,
.table-no-border>tbody>tr>th,
.table-no-border>tfoot>tr>th,
.table-no-border>thead>tr>td,
.table-no-border>tbody>tr>td,
.table-no-border>tfoot>tr>td,
.table-no-border>tbody,
.table-no-border>thead,
.table-no-border>tfoot{
  border-top: none !important;
  border-bottom: none !important;
}
